import express from 'express';
import bodyParser from 'body-parser';
import cors from 'cors';
import mysql from 'mysql2';


const app = express();

// Middleware
app.use(cors());
app.use(bodyParser.json());

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö MySQL
const db = mysql.createConnection({
    host: 'localhost',         // –•–æ—Å—Ç –≤–∞—à–µ–≥–æ MySQL (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é localhost)
    user: 'root',              // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–µ–≥–æ)
    password: 'root',  // –ü–∞—Ä–æ–ª—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π)
    database: 'hackaton-test'  // –ù–∞–∑–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
});

// –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î
db.connect((err) => {
    if (err) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: ', err.message);
        return;
    }
    console.log('–£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!');
});

// –¢–µ—Å—Ç–æ–≤—ã–π –º–∞—Ä—à—Ä—É—Ç
app.get('/', (req, res) => {
    res.send('–°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç! üéâ');
});

// –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
app.get('/api/users', (req, res) => {
    const query = 'SELECT * FROM users';
    db.query(query, (err, results) => {
        if (err) {
            res.status(500).json({ error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞.' });
            return;
        }
        res.status(200).json(results);
    });
});
// –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
app.post('/api/users', (req, res) => {
    const { first_name, last_name, email, password_hash, phone_number, birth_year, role, avatar_url } = req.body;

    // –ü—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã
    if (!first_name || !last_name || !email || !password_hash || !birth_year || !role) {
        return res.status(400).json({ message: '–ù–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã!' });
    }

    const query = `
        INSERT INTO users (first_name, last_name, email, password_hash, phone_number, birth_year, role, avatar_url) 
        VALUES (?, ?, ?, ?, ?, ?, ?, ?)
    `;

    db.query(query, [first_name, last_name, email, password_hash, phone_number, birth_year, role, avatar_url], (err, result) => {
        if (err) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', err.message);
            res.status(500).json({ error: '–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.' });
            return;
        }
        res.status(201).json({ message: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!', id: result.insertId });
    });
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
const PORT = 5000;
app.listen(PORT, () => {
    console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${PORT}`);
});